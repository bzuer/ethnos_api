# Sphinx Unified Configuration - Consolidated configuration for all indexes
# Generated: 2025-09-05 
# Replaces: sphinx.conf and sphinx-poc.conf
# Uses environment variables for credentials

# =============================================================================
# DATA SOURCES
# =============================================================================

source works_src
{
    type = mysql
    sql_host = localhost
    sql_user = api_dev
    sql_pass = s0urc3_v3nv
    sql_db = data_db
    sql_port = 3306
    
    sql_query = \
        SELECT \
            w.id, \
            w.title, \
            COALESCE(w.subtitle, '') as subtitle, \
            COALESCE(w.abstract, '') as abstract, \
            COALESCE(was.author_string, '') as author_string, \
            COALESCE(v.name, '') as venue_name, \
            COALESCE(pub.doi, w.temp_doi, '') as doi, \
            UNIX_TIMESTAMP(w.created_at) as created_ts, \
            COALESCE(pub.year, 0) as year, \
            w.work_type, \
            COALESCE(w.language, 'unknown') as language, \
            COALESCE(pub.open_access, 0) as open_access, \
            COALESCE(pub.peer_reviewed, 0) as peer_reviewed \
        FROM works w \
        LEFT JOIN work_author_summary was ON w.id = was.work_id \
        LEFT JOIN publications pub ON w.id = pub.work_id \
        LEFT JOIN venues v ON pub.venue_id = v.id \
        WHERE was.author_string IS NOT NULL \
        ORDER BY w.id ASC
        
    # Attributes for filtering and sorting
    sql_attr_uint = year
    sql_attr_uint = created_ts
    sql_attr_uint = open_access
    sql_attr_uint = peer_reviewed
    sql_attr_string = work_type
    sql_attr_string = language
    
    # Text fields for full-text search
    sql_field_string = title
    sql_field_string = subtitle  
    sql_field_string = abstract
    sql_field_string = author_string
    sql_field_string = venue_name
    sql_field_string = doi
}

source persons_src
{
    type = mysql
    sql_host = localhost
    sql_user = api_dev
    sql_pass = s0urc3_v3nv
    sql_db = data_db
    sql_port = 3306
    
    sql_query = \
        SELECT \
            p.id, \
            p.display_name, \
            COALESCE(p.given_names, '') as given_names, \
            COALESCE(p.family_name, '') as family_name, \
            COALESCE(p.orcid, '') as orcid, \
            UNIX_TIMESTAMP(p.created_at) as created_ts, \
            COALESCE(p.works_count, 0) as works_count, \
            COALESCE(p.cited_by_count, 0) as cited_by_count, \
            COALESCE(aff.name, '') as primary_affiliation \
        FROM persons p \
        LEFT JOIN ( \
            SELECT a.person_id, o.name \
            FROM affiliations a \
            JOIN organizations o ON a.organization_id = o.id \
            WHERE a.is_primary = 1 \
        ) aff ON p.id = aff.person_id \
        ORDER BY p.id ASC
        
    sql_attr_uint = created_ts
    sql_attr_uint = works_count
    sql_attr_uint = cited_by_count
    
    sql_field_string = display_name
    sql_field_string = given_names
    sql_field_string = family_name
    sql_field_string = orcid
    sql_field_string = primary_affiliation
}

source organizations_src
{
    type = mysql
    sql_host = localhost
    sql_user = api_dev
    sql_pass = s0urc3_v3nv
    sql_db = data_db
    sql_port = 3306
    
    sql_query = \
        SELECT \
            o.id, \
            o.name, \
            COALESCE(o.acronym, '') as acronym, \
            COALESCE(o.country, '') as country, \
            COALESCE(o.type, '') as org_type, \
            UNIX_TIMESTAMP(o.created_at) as created_ts, \
            COALESCE(o.works_count, 0) as works_count, \
            COALESCE(o.cited_by_count, 0) as cited_by_count \
        FROM organizations o \
        ORDER BY o.id ASC
        
    sql_attr_uint = created_ts
    sql_attr_uint = works_count
    sql_attr_uint = cited_by_count
    sql_attr_string = country
    sql_attr_string = org_type
    
    sql_field_string = name
    sql_field_string = acronym
}

source venues_metrics_src
{
    type = mysql
    sql_host = localhost
    sql_user = api_dev
    sql_pass = s0urc3_v3nv
    sql_db = data_db
    sql_port = 3306
    
    sql_query = \
        SELECT \
            v.id, \
            v.name, \
            COALESCE(v.publisher, '') as publisher, \
            COALESCE(v.issn, '') as issn, \
            COALESCE(v.type, '') as venue_type, \
            UNIX_TIMESTAMP(v.created_at) as created_ts, \
            COALESCE(vm.works_count, 0) as works_count, \
            COALESCE(vm.cited_by_count, 0) as cited_by_count, \
            COALESCE(vm.h_index, 0) as h_index, \
            COALESCE(vm.i10_index, 0) as i10_index \
        FROM venues v \
        LEFT JOIN venue_metrics vm ON v.id = vm.venue_id \
        ORDER BY v.id ASC
        
    sql_attr_uint = created_ts
    sql_attr_uint = works_count
    sql_attr_uint = cited_by_count
    sql_attr_uint = h_index
    sql_attr_uint = i10_index
    sql_attr_string = venue_type
    
    sql_field_string = name
    sql_field_string = publisher
    sql_field_string = issn
}

source signatures_src
{
    type = mysql
    sql_host = localhost
    sql_user = api_dev
    sql_pass = s0urc3_v3nv
    sql_db = data_db
    sql_port = 3306
    
    sql_query = \
        SELECT \
            s.id, \
            s.signature, \
            COALESCE(s.surname, '') as surname, \
            COALESCE(s.initial, '') as initial, \
            UNIX_TIMESTAMP(s.created_at) as created_ts, \
            COALESCE(s.works_count, 0) as works_count \
        FROM signatures s \
        WHERE s.signature IS NOT NULL AND s.signature != '' \
        ORDER BY s.id ASC
        
    sql_attr_uint = created_ts
    sql_attr_uint = works_count
    
    sql_field_string = signature
    sql_field_string = surname
    sql_field_string = initial
}

# =============================================================================
# INDEXES
# =============================================================================

index works_poc
{
    source = works_src
    path = /var/lib/sphinx/works_poc
    
    # Bibliographic-specific configuration
    morphology = stem_en
    charset_table = 0..9, A..Z->a..z, _, a..z
    
    # Enable exact word matching for DOIs, author names
    index_exact_words = 1
    
    # Enable prefix/suffix search
    min_prefix_len = 3
    expand_keywords = 1
    
    # Word length limits
    min_word_len = 2
    
    # HTML stripping (in case abstracts contain HTML)
    html_strip = 1
    html_remove_elements = style, script
}

index persons_poc
{
    source = persons_src
    path = /var/lib/sphinx/persons_poc
    
    morphology = stem_en
    charset_table = 0..9, A..Z->a..z, _, a..z
    index_exact_words = 1
    min_prefix_len = 2
    expand_keywords = 1
    min_word_len = 1
}

index organizations_poc
{
    source = organizations_src
    path = /var/lib/sphinx/organizations_poc
    
    morphology = stem_en
    charset_table = 0..9, A..Z->a..z, _, a..z
    index_exact_words = 1
    min_prefix_len = 3
    expand_keywords = 1
    min_word_len = 2
}

index venues_metrics_poc
{
    source = venues_metrics_src
    path = /var/lib/sphinx/venues_metrics_poc
    
    morphology = stem_en
    charset_table = 0..9, A..Z->a..z, _, a..z
    index_exact_words = 1
    min_prefix_len = 3
    expand_keywords = 1
    min_word_len = 2
}

index signatures_poc
{
    source = signatures_src
    path = /var/lib/sphinx/signatures_poc
    
    morphology = stem_en
    charset_table = 0..9, A..Z->a..z, _, a..z
    index_exact_words = 1
    min_prefix_len = 1
    expand_keywords = 1
    min_word_len = 1
}

# Real-Time index for incremental updates
index works_rt
{
    type = rt
    path = /var/lib/sphinx/works_rt
    
    # RT fields for bibliographic search
    rt_field = title
    rt_field = subtitle
    rt_field = abstract  
    rt_field = author_string
    rt_field = venue_name
    rt_field = doi
    
    # RT attributes for filtering
    rt_attr_uint = year
    rt_attr_uint = created_ts
    rt_attr_uint = open_access
    rt_attr_uint = peer_reviewed
    rt_attr_string = work_type
    rt_attr_string = language
    
    # Same morphology as regular index
    morphology = stem_en
    charset_table = 0..9, A..Z->a..z, _, a..z
    index_exact_words = 1
    min_prefix_len = 3
    expand_keywords = 1
    min_word_len = 2
    html_strip = 1
    html_remove_elements = style, script
}

# =============================================================================
# INDEXER SETTINGS
# =============================================================================

indexer
{
    mem_limit = 1024M
    max_iops = 100
    max_iosize = 1048576
    max_xmlpipe2_field = 16M
    write_buffer = 16M
    max_file_field_buffer = 32M
}

# =============================================================================
# SEARCHD DAEMON SETTINGS
# =============================================================================

searchd
{
    listen = 127.0.0.1:9312
    listen = 127.0.0.1:9306:mysql41
    
    log = /home/server/api_v2/logs/sphinx-daemon.log
    query_log = /home/server/api_v2/logs/sphinx-query.log
    pid_file = /home/server/api_v2/logs/sphinx.pid
    
    # Performance settings optimized for Sphinx 2.2.11
    seamless_rotate = 1
    preopen_indexes = 1
    unlink_old = 1
    
    # Network settings
    max_children = 30
    max_packet_size = 32M
    
    # Query performance
    read_timeout = 5
    client_timeout = 300
    max_filters = 256
    max_filter_values = 65536
    
    # Binlog for replication (disabled by default)
    binlog_path = /var/lib/sphinx/binlog
    binlog_max_log_size = 128M
    binlog_flush = 2
    
    # Worker threads (compatible with Sphinx 2.2.11)
    workers = threads
}